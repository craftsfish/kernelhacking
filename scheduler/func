static inline void update_tg_cfs_util(struct cfs_rq *cfs_rq, struct sched_entity *se, struct cfs_rq *gcfs_rq) {
	cfs_rq: se隶属的cfs_rq
	se: task_group在特定CPU上的sched_entity
	gcfs_rq: se负责管理的cfs_rq

	将gcfs_rq的util_avg和util_sum信息propogate到cfs_rq中，se作为中转站，记录了上一次同步时的状态，所以该函数每次只需要增量更新
}

static inline int propagate_entity_load_avg(struct sched_entity *se) {
	se: task_group在特定CPU上的sched_entity，如果是普通的task的话，该函数直接返回

	如果se负责管理的cfs_rq的统计信息需要propagate的话，将相关的信息汇集到自己所隶属的cfs_rq上面，并且标记该cfs_rq的信息需要继续propagate
	这样的设计可以避免每次cfs_rq管理的se有更新的时候，就去做propagate，
}
