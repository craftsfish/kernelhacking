/sys/bus/event_source/devices
perf_event_init_task在copy_process的时候继承event


查看可以probe的代码位置
./perf probe -k /home/lcj/work/pi/linux/vmlinux -L 'do_sys_open@/home/lcj/work/pi/linux/fs/open.c'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -L 'do_sys_open@/home/lcj/work/pi/linux/fs/open.c:9+5'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -L 'do_sys_open@/home/lcj/work/pi/linux/fs/open.c:0-26'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -L '/home/lcj/work/pi/linux/fs/open.c'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -L '/home/lcj/work/pi/linux/fs/open.c:0+99'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -L '/home/lcj/work/pi/linux/fs/open.c:0-99'

查看probe点可访问的变量(一行源代码可能对应多个probe点)
./perf probe -k /home/lcj/work/pi/linux/vmlinux -V 'do_sys_open@/home/lcj/work/pi/linux/fs/open.c:9'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -D 'do_sys_open+228 tmp dfd flags op'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -V 'do_sys_open+228@/home/lcj/work/pi/linux/fs/open.c'

查看probe对应的定义
./perf probe -k /home/lcj/work/pi/linux/vmlinux -D 'do_sys_open@/home/lcj/work/pi/linux/fs/open.c:9'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -D 'do_sys_open+228@/home/lcj/work/pi/linux/fs/open.c dfd flags tmp op'
./perf probe -k /home/lcj/work/pi/linux/vmlinux -D 'do_sys_open+228 dfd flags tmp op'



(gdb) p vmlinux_path[0]
$4 = 0x555555e91250 "vmlinux"
(gdb) p vmlinux_path[1]
$5 = 0x555555e90c00 "/boot/vmlinux"
(gdb) p vmlinux_path[2]
$6 = 0x555555e90e90 "/boot/vmlinux-5.6.0-rc6-custom"
(gdb) p vmlinux_path[3]
$7 = 0x555555e912f0 "/usr/lib/debug/boot/vmlinux-5.6.0-rc6-custom"
(gdb) p vmlinux_path[4]
$8 = 0x555555e91330 "/lib/modules/5.6.0-rc6-custom/build/vmlinux"
(gdb) p vmlinux_path[5]
$9 = 0x555555e91370 "/usr/lib/debug/lib/modules/5.6.0-rc6-custom/vmlinux"
(gdb) p vmlinux_path[6]
$10 = 0x555555e913b0 "/usr/lib/debug/boot/vmlinux-5.6.0-rc6-custom.debug"


监测task执行
perf_event_task_sched_in
perf_event_task_sched_out


抓取调用栈
PERF_SAMPLE_CALLCHAIN
#0  __perf_evsel__config_callchain (evsel=0x555555e94570, opts=0x555555d08e38 <record+280>, param=0x555555cd7300 <callchain_param>) at util/evsel.c:692
#1  0x00005555557b509b in perf_evsel__config_callchain (param=0x555555ed5940, opts=0x555555d08e38 <record+280>, evsel=0x555555e94570) at util/evsel.c:753
#2  perf_evsel__config (evsel=evsel@entry=0x555555e94570, opts=opts@entry=0x555555d08e38 <record+280>, callchain=callchain@entry=0x555555cd7300 <callchain_param>) at util/evsel.c:1047
#3  0x000055555583d39f in perf_evlist__config (evlist=evlist@entry=0x555555e93310, opts=opts@entry=0x555555d08e38 <record+280>, callchain=<optimized out>) at util/record.c:191
#4  0x0000555555724889 in record__open (rec=0x555555d08d20 <record>) at builtin-record.c:823
#5  __cmd_record (rec=0x555555d08d20 <record>, argv=<optimized out>, argc=2) at builtin-record.c:1489
#6  cmd_record (argc=2, argv=<optimized out>) at builtin-record.c:2629
#7  0x0000555555795c5d in run_builtin (p=0x555555d13838 <commands+216>, argc=5, argv=0x7fffffffdf00) at perf.c:312
#8  0x0000555555795f6e in handle_internal_command (argc=5, argv=0x7fffffffdf00) at perf.c:364
#9  0x000055555570c601 in run_argv (argcp=<synthetic pointer>, argv=<synthetic pointer>) at perf.c:408
#10 main (argc=<optimized out>, argv=0x7fffffffdf00) at perf.c:538
